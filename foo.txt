diff --git a/foo.txt b/foo.txt
index 7c62fbd..e69de29 100644
--- a/foo.txt
+++ b/foo.txt
@@ -1,307 +0,0 @@
-diff --git a/package-lock.json b/package-lock.json
-index 0aa9276..caa4a70 100644
---- a/package-lock.json
-+++ b/package-lock.json
-@@ -8,11 +8,15 @@
-       "name": "leaderboard-scraper",
-       "version": "0.1.0",
-       "dependencies": {
-+        "@fortawesome/fontawesome-svg-core": "^6.5.1",
-+        "@fortawesome/free-solid-svg-icons": "^6.5.1",
-+        "@fortawesome/react-fontawesome": "^0.2.0",
-         "@testing-library/jest-dom": "^5.17.0",
-         "@testing-library/react": "^13.4.0",
-         "@testing-library/user-event": "^13.5.0",
-         "firebase": "^10.9.0",
-         "firebaseui": "^6.1.0",
-+        "fortawesome": "^0.0.1-security",
-         "jquery": "^3.7.1",
-         "react": "^18.2.0",
-         "react-dom": "^18.2.0",
-@@ -2877,6 +2881,51 @@
-       "resolved": "https://registry.npmjs.org/@firebase/webchannel-wrapper/-/webchannel-wrapper-0.10.5.tgz",
-       "integrity": "sha512-eSkJsnhBWv5kCTSU1tSUVl9mpFu+5NXXunZc83le8GMjMlsWwQArSc7cJJ4yl+aDFY0NGLi0AjZWMn1axOrkRg=="
-     },
-+    "node_modules/@fortawesome/fontawesome-common-types": {
-+      "version": "6.5.1",
-+      "resolved": "https://registry.npmjs.org/@fortawesome/fontawesome-common-types/-/fontawesome-common-types-6.5.1.tgz",
-+      "integrity": "sha512-GkWzv+L6d2bI5f/Vk6ikJ9xtl7dfXtoRu3YGE6nq0p/FFqA1ebMOAWg3XgRyb0I6LYyYkiAo+3/KrwuBp8xG7A==",
-+      "hasInstallScript": true,
-+      "engines": {
-+        "node": ">=6"
-+      }
-+    },
-+    "node_modules/@fortawesome/fontawesome-svg-core": {
-+      "version": "6.5.1",
-+      "resolved": "https://registry.npmjs.org/@fortawesome/fontawesome-svg-core/-/fontawesome-svg-core-6.5.1.tgz",
-+      "integrity": "sha512-MfRCYlQPXoLlpem+egxjfkEuP9UQswTrlCOsknus/NcMoblTH2g0jPrapbcIb04KGA7E2GZxbAccGZfWoYgsrQ==",
-+      "hasInstallScript": true,
-+      "dependencies": {
-+        "@fortawesome/fontawesome-common-types": "6.5.1"
-+      },
-+      "engines": {
-+        "node": ">=6"
-+      }
-+    },
-+    "node_modules/@fortawesome/free-solid-svg-icons": {
-+      "version": "6.5.1",
-+      "resolved": "https://registry.npmjs.org/@fortawesome/free-solid-svg-icons/-/free-solid-svg-icons-6.5.1.tgz",
-+      "integrity": "sha512-S1PPfU3mIJa59biTtXJz1oI0+KAXW6bkAb31XKhxdxtuXDiUIFsih4JR1v5BbxY7hVHsD1RKq+jRkVRaf773NQ==",
-+      "hasInstallScript": true,
-+      "dependencies": {
-+        "@fortawesome/fontawesome-common-types": "6.5.1"
-+      },
-+      "engines": {
-+        "node": ">=6"
-+      }
-+    },
-+    "node_modules/@fortawesome/react-fontawesome": {
-+      "version": "0.2.0",
-+      "resolved": "https://registry.npmjs.org/@fortawesome/react-fontawesome/-/react-fontawesome-0.2.0.tgz",
-+      "integrity": "sha512-uHg75Rb/XORTtVt7OS9WoK8uM276Ufi7gCzshVWkUJbHhh3svsUUeqXerrM96Wm7fRiDzfKRwSoahhMIkGAYHw==",
-+      "dependencies": {
-+        "prop-types": "^15.8.1"
-+      },
-+      "peerDependencies": {
-+        "@fortawesome/fontawesome-svg-core": "~1 || ~6",
-+        "react": ">=16.3"
-+      }
-+    },
-     "node_modules/@grpc/grpc-js": {
-       "version": "1.9.14",
-       "resolved": "https://registry.npmjs.org/@grpc/grpc-js/-/grpc-js-1.9.14.tgz",
-@@ -9514,6 +9563,11 @@
-         "node": ">= 6"
-       }
-     },
-+    "node_modules/fortawesome": {
-+      "version": "0.0.1-security",
-+      "resolved": "https://registry.npmjs.org/fortawesome/-/fortawesome-0.0.1-security.tgz",
-+      "integrity": "sha512-o/pwn9ZSnveFLYP0d5IejSwz0rpGMDQsBaYVvR8WXSvnxILIwh7IUJK0P90QMF4cnIyouVF2BGrz0LEVSyzimA=="
-+    },
-     "node_modules/forwarded": {
-       "version": "0.2.0",
-       "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
-diff --git a/package.json b/package.json
-index 98d6613..f4fa5f6 100644
---- a/package.json
-+++ b/package.json
-@@ -3,11 +3,15 @@
-   "version": "0.1.0",
-   "private": true,
-   "dependencies": {
-+    "@fortawesome/fontawesome-svg-core": "^6.5.1",
-+    "@fortawesome/free-solid-svg-icons": "^6.5.1",
-+    "@fortawesome/react-fontawesome": "^0.2.0",
-     "@testing-library/jest-dom": "^5.17.0",
-     "@testing-library/react": "^13.4.0",
-     "@testing-library/user-event": "^13.5.0",
-     "firebase": "^10.9.0",
-     "firebaseui": "^6.1.0",
-+    "fortawesome": "^0.0.1-security",
-     "jquery": "^3.7.1",
-     "react": "^18.2.0",
-     "react-dom": "^18.2.0",
-diff --git a/src/components/ProfilePage.css b/src/components/ProfilePage.css
-index 7dd2ba3..cf2e57d 100644
---- a/src/components/ProfilePage.css
-+++ b/src/components/ProfilePage.css
-@@ -62,9 +62,15 @@
- }
- 
- .profile-form-button.invalid {
--    background-color: #dc3545;
-+    background-color: #dc3545; /* Red color */
- }
- 
- .profile-form-button.invalid:hover {
--    background-color: #c82333;
-+    background-color: #c82333; /* Darker shade of red on hover */
- }
-+
-+.profile-form-error-message {
-+    color: #dc3545;
-+    font-size: 14px;
-+    margin-top: 10px;
-+}
-\ No newline at end of file
-diff --git a/src/components/ProfilePage.js b/src/components/ProfilePage.js
-index 828aa14..df29c3f 100644
---- a/src/components/ProfilePage.js
-+++ b/src/components/ProfilePage.js
-@@ -1,14 +1,18 @@
- import React, { useState, useEffect } from 'react';
- import { auth } from '../services/firebase';
--import $ from 'jquery'; // Add this line to fix the error
-+import $ from 'jquery';
- import './ProfilePage.css';
- 
-+// Import Font Awesome
-+import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
-+import { faSpinner } from '@fortawesome/free-solid-svg-icons';
-+
- function ProfileForm() {
--  const [geeksForGeeks, setGeeksForGeeks] = useState({ platform: 'geeksforgeeks', username: '', verified: false });
--  const [codeforces, setCodeforces] = useState({ platform: 'codeforces', username: '', verified: false });
--  const [leetCode, setLeetCode] = useState({ platform: 'leetcode', username: '', verified: false });
--  const [codeChef, setCodeChef] = useState({ platform: 'codechef', username: '', verified: false });
--  const [hackerRank, setHackerRank] = useState({ platform: 'hackerrank', username: '', verified: false });
-+  const [geeksForGeeks, setGeeksForGeeks] = useState({ platform: 'geeksforgeeks', username: '', verificationStatus: 'unchecked', loading: false });
-+  const [codeforces, setCodeforces] = useState({ platform: 'codeforces', username: '', verificationStatus: 'unchecked', loading: false });
-+  const [leetCode, setLeetCode] = useState({ platform: 'leetcode', username: '', verificationStatus: 'unchecked', loading: false });
-+  const [codeChef, setCodeChef] = useState({ platform: 'codechef', username: '', verificationStatus: 'unchecked', loading: false });
-+  const [hackerRank, setHackerRank] = useState({ platform: 'hackerrank', username: '', verificationStatus: 'unchecked', loading: false });
-   const [errorMessage, setErrorMessage] = useState('');
-   const [userInfo, setUserInfo] = useState(null);
- 
-@@ -30,28 +34,52 @@ function ProfileForm() {
-   const handleVerify = async (platform, userData, setData) => {
-     try {
-       console.log(`Verifying ${platform} username...`);
--      const url = `https://www.${platform}.com/${userData.username}`;
-+      let url = '';
-+      if (platform === 'leetcode') {
-+        // url = `https://www.${platform}.com/${userData.username}`
-+        // url = `https://leetcode.com/graphql?query=query{userContestRanking(username:"${userData.username}"){rating}}`;
-+        url = `https://alfa-leetcode-api.onrender.com/${userData.username}`;
-+      } else {
-+        url = `https://codeprofilevalidator.onrender.com/check-url-platform/?platform=${platform}&username=${userData.username}`;
-+      }
-+
-+      // Set loading state to true when verification process starts
-+      setData(prevData => ({ ...prevData, loading: true }));
-+      setErrorMessage('');
-+
-       $.ajax({
-         url: url,
--        dataType: 'jsonp',
-+        dataType: 'json',
-         statusCode: {
--          200: function () {
--            console.log("status code 200 returned");
-+          200: function (d) {
-+            // check if response json has "errors" key
-+            if ('errors' in d) {
-+              console.log(d.errors);
-+              console.log("status code 200 returned");
-+              setData({ platform, username: userData.username, verificationStatus: 'verified_false', loading: false });
-+            } else {
-+              console.log(d);
-+              console.log("status code 200 returned");
-+              setData({ platform, username: userData.username, verificationStatus: 'verified_true', loading: false });
-+            }
-           },
--          404: function () {
-+          400: function (d) {
-+            console.log(d);
-+            setData({ platform, username: userData.username, verificationStatus: 'verified_false', loading: false });
-+            setErrorMessage(d.responseJSON.error);
-+          },
-+          404: function (d) {
-+            console.log(d);
-             console.log("status code 404 returned");
-+            setData({ platform, username: userData.username, verificationStatus: 'verified_false', loading: false });
-           }
-         },
--        error: function () {
--          console.log("Error");
--        }
--      });
-+      })
-     } catch (error) {
-       console.error(error);
-     }
-   };
- 
--
-   const handleSave = async () => {
-     // Save to database if all usernames are verified
-     // For simplicity, just displaying an alert
-@@ -61,7 +89,7 @@ function ProfileForm() {
-   const handleUsernameChange = (e, setUsername) => {
-     const inputUsername = e.target.value;
-     const formattedUsername = inputUsername.replace(/[A-Z]/g, (match) => match.toLowerCase()); // Convert uppercase to lowercase
--    if (/^[a-z0-9_]{1,20}$/.test(formattedUsername)) { // Check character limit and format
-+    if (inputUsername === '' || /^[a-z0-9_]{1,20}$/.test(formattedUsername)) { // Check if input is empty or matches the format
-       setUsername({ username: formattedUsername, verified: false });
-       setErrorMessage(''); // Clear previous error message
-     } else {
-@@ -78,6 +106,7 @@ function ProfileForm() {
-           <p>{userInfo?.email}</p>
-         </div>
-       </div>
-+      {/* GeeksForGeeks */}
-       <div className="profile-form-input-container">
-         <input
-           type="text"
-@@ -86,9 +115,12 @@ function ProfileForm() {
-           placeholder="GeeksforGeeks Username"
-           className={errorMessage ? 'profile-form-input invalid' : 'profile-form-input'}
-         />
--        <button onClick={() => handleVerify('geeksforgeeks', geeksForGeeks, setGeeksForGeeks)} className={geeksForGeeks.verified ? 'profile-form-button verified' : 'profile-form-button'}>Verify</button>
-+        <button onClick={() => handleVerify('geeksforgeeks', geeksForGeeks, setGeeksForGeeks)} className={geeksForGeeks.loading ? 'profile-form-button loading' : geeksForGeeks.verificationStatus === 'unchecked' ? 'profile-form-button' : geeksForGeeks.verificationStatus === 'verified_true' ? 'profile-form-button verified' : geeksForGeeks.verificationStatus === 'verified_false' ? 'profile-form-button invalid' : 'profile-form-button'}>
-+          {geeksForGeeks.loading ? <FontAwesomeIcon icon={faSpinner} spin /> : geeksForGeeks.verificationStatus === 'verified_true' ? 'Exists' : geeksForGeeks.verificationStatus === 'verified_false' ? 'Invalid' : 'Verify'}
-+        </button>
-       </div>
- 
-+      {/* Codeforces */}
-       <div className="profile-form-input-container">
-         <input
-           type="text"
-@@ -97,9 +129,12 @@ function ProfileForm() {
-           placeholder="Codeforces Username"
-           className={errorMessage ? 'profile-form-input invalid' : 'profile-form-input'}
-         />
--        <button onClick={() => handleVerify('codeforces', codeforces, setCodeforces)} className={codeforces.verified ? 'profile-form-button verified' : 'profile-form-button'}>Verify</button>
-+        <button onClick={() => handleVerify('codeforces', codeforces, setCodeforces)} className={codeforces.loading ? 'profile-form-button loading' : codeforces.verificationStatus === 'unchecked' ? 'profile-form-button' : codeforces.verificationStatus === 'verified_true' ? 'profile-form-button verified' : codeforces.verificationStatus === 'verified_false' ? 'profile-form-button invalid' : 'profile-form-button'}>
-+          {codeforces.loading ? <FontAwesomeIcon icon={faSpinner} spin /> : codeforces.verificationStatus === 'verified_true' ? 'Exists' : codeforces.verificationStatus === 'verified_false' ? 'Invalid' : 'Verify'}
-+        </button>
-       </div>
- 
-+      {/* LeetCode */}
-       <div className="profile-form-input-container">
-         <input
-           type="text"
-@@ -108,9 +143,12 @@ function ProfileForm() {
-           placeholder="LeetCode Username"
-           className={errorMessage ? 'profile-form-input invalid' : 'profile-form-input'}
-         />
--        <button onClick={() => handleVerify('leetcode', leetCode, setLeetCode)} className={leetCode.verified ? 'profile-form-button verified' : 'profile-form-button'}>Verify</button>
-+        <button onClick={() => handleVerify('leetcode', leetCode, setLeetCode)} className={leetCode.loading ? 'profile-form-button loading' : leetCode.verificationStatus === 'unchecked' ? 'profile-form-button' : leetCode.verificationStatus === 'verified_true' ? 'profile-form-button verified' : leetCode.verificationStatus === 'verified_false' ? 'profile-form-button invalid' : 'profile-form-button'}>
-+          {leetCode.loading ? <FontAwesomeIcon icon={faSpinner} spin /> : leetCode.verificationStatus === 'verified_true' ? 'Exists' : leetCode.verificationStatus === 'verified_false' ? 'Invalid' : 'Verify'}
-+        </button>
-       </div>
- 
-+      {/* CodeChef */}
-       <div className="profile-form-input-container">
-         <input
-           type="text"
-@@ -119,9 +157,12 @@ function ProfileForm() {
-           placeholder="CodeChef Username"
-           className={errorMessage ? 'profile-form-input invalid' : 'profile-form-input'}
-         />
--        <button onClick={() => handleVerify('codechef', codeChef, setCodeChef)} className={codeChef.verified ? 'profile-form-button verified' : 'profile-form-button'}>Verify</button>
-+        <button onClick={() => handleVerify('codechef', codeChef, setCodeChef)} className={codeChef.loading ? 'profile-form-button loading' : codeChef.verificationStatus === 'unchecked' ? 'profile-form-button' : codeChef.verificationStatus === 'verified_true' ? 'profile-form-button verified' : codeChef.verificationStatus === 'verified_false' ? 'profile-form-button invalid' : 'profile-form-button'}>
-+          {codeChef.loading ? <FontAwesomeIcon icon={faSpinner} spin /> : codeChef.verificationStatus === 'verified_true' ? 'Exists' : codeChef.verificationStatus === 'verified_false' ? 'Invalid' : 'Verify'}
-+        </button>
-       </div>
- 
-+      {/* HackerRank */}
-       <div className="profile-form-input-container">
-         <input
-           type="text"
-@@ -130,11 +171,12 @@ function ProfileForm() {
-           placeholder="HackerRank Username"
-           className={errorMessage ? 'profile-form-input invalid' : 'profile-form-input'}
-         />
--        <button onClick={() => handleVerify('hackerrank', hackerRank, setHackerRank)} className={hackerRank.verified ? 'profile-form-button verified' : 'profile-form-button'}>Verify</button>
-+        <button onClick={() => handleVerify('hackerrank', hackerRank, setHackerRank)} className={hackerRank.loading ? 'profile-form-button loading' : hackerRank.verificationStatus === 'unchecked' ? 'profile-form-button' : hackerRank.verificationStatus === 'verified_true' ? 'profile-form-button verified' : hackerRank.verificationStatus === 'verified_false' ? 'profile-form-button invalid' : 'profile-form-button'}>
-+          {hackerRank.loading ? <FontAwesomeIcon icon={faSpinner} spin /> : hackerRank.verificationStatus === 'verified_true' ? 'Exists' : hackerRank.verificationStatus === 'verified_false' ? 'Invalid' : 'Verify'}
-+        </button>
-       </div>
- 
-       {errorMessage && <p className="profile-form-error-message">{errorMessage}</p>}
--
-       <button onClick={handleSave} className="profile-form-button">Save</button>
-     </div>
-   );
diff --git a/package-lock.json b/package-lock.json
index 61dddf4..08dd7fb 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -9,17 +9,20 @@
       "version": "0.1.0",
       "dependencies": {
         "@fortawesome/fontawesome-svg-core": "^6.5.1",
+        "@fortawesome/free-brands-svg-icons": "^6.5.2",
         "@fortawesome/free-solid-svg-icons": "^6.5.1",
         "@fortawesome/react-fontawesome": "^0.2.0",
         "@testing-library/jest-dom": "^5.17.0",
         "@testing-library/react": "^13.4.0",
         "@testing-library/user-event": "^13.5.0",
         "@tsparticles/react": "^3.0.0",
+        "bootstrap": "^5.3.3",
         "firebase": "^10.9.0",
         "firebaseui": "^6.1.0",
         "fortawesome": "^0.0.1-security",
         "jquery": "^3.7.1",
         "react": "^18.2.0",
+        "react-bootstrap": "^2.10.2",
         "react-dom": "^18.2.0",
         "react-firebase-hooks": "^5.1.1",
         "react-router-dom": "^6.22.3",
@@ -2905,6 +2908,27 @@
         "node": ">=6"
       }
     },
+    "node_modules/@fortawesome/free-brands-svg-icons": {
+      "version": "6.5.2",
+      "resolved": "https://registry.npmjs.org/@fortawesome/free-brands-svg-icons/-/free-brands-svg-icons-6.5.2.tgz",
+      "integrity": "sha512-zi5FNYdmKLnEc0jc0uuHH17kz/hfYTg4Uei0wMGzcoCL/4d3WM3u1VMc0iGGa31HuhV5i7ZK8ZlTCQrHqRHSGQ==",
+      "hasInstallScript": true,
+      "dependencies": {
+        "@fortawesome/fontawesome-common-types": "6.5.2"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/@fortawesome/free-brands-svg-icons/node_modules/@fortawesome/fontawesome-common-types": {
+      "version": "6.5.2",
+      "resolved": "https://registry.npmjs.org/@fortawesome/fontawesome-common-types/-/fontawesome-common-types-6.5.2.tgz",
+      "integrity": "sha512-gBxPg3aVO6J0kpfHNILc+NMhXnqHumFxOmjYCFfOiLZfwhnnfhtsdA2hfJlDnj+8PjAs6kKQPenOTKj3Rf7zHw==",
+      "hasInstallScript": true,
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/@fortawesome/free-solid-svg-icons": {
       "version": "6.5.1",
       "resolved": "https://registry.npmjs.org/@fortawesome/free-solid-svg-icons/-/free-solid-svg-icons-6.5.1.tgz",
@@ -3972,6 +3996,15 @@
         }
       }
     },
+    "node_modules/@popperjs/core": {
+      "version": "2.11.8",
+      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
+      "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/popperjs"
+      }
+    },
     "node_modules/@protobufjs/aspromise": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
@@ -4026,6 +4059,20 @@
       "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
       "integrity": "sha512-Vvn3zZrhQZkkBE8LSuW3em98c0FwgO4nxzv6OdSxPKJIEKY2bGbHn+mhGIPerzI4twdxaP8/0+06HBpwf345Lw=="
     },
+    "node_modules/@react-aria/ssr": {
+      "version": "3.9.2",
+      "resolved": "https://registry.npmjs.org/@react-aria/ssr/-/ssr-3.9.2.tgz",
+      "integrity": "sha512-0gKkgDYdnq1w+ey8KzG9l+H5Z821qh9vVjztk55rUg71vTk/Eaebeir+WtzcLLwTjw3m/asIjx8Y59y1lJZhBw==",
+      "dependencies": {
+        "@swc/helpers": "^0.5.0"
+      },
+      "engines": {
+        "node": ">= 12"
+      },
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0"
+      }
+    },
     "node_modules/@remix-run/router": {
       "version": "1.15.3",
       "resolved": "https://registry.npmjs.org/@remix-run/router/-/router-1.15.3.tgz",
@@ -4034,6 +4081,45 @@
         "node": ">=14.0.0"
       }
     },
+    "node_modules/@restart/hooks": {
+      "version": "0.4.16",
+      "resolved": "https://registry.npmjs.org/@restart/hooks/-/hooks-0.4.16.tgz",
+      "integrity": "sha512-f7aCv7c+nU/3mF7NWLtVVr0Ra80RqsO89hO72r+Y/nvQr5+q0UFGkocElTH6MJApvReVh6JHUFYn2cw1WdHF3w==",
+      "dependencies": {
+        "dequal": "^2.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
+    "node_modules/@restart/ui": {
+      "version": "1.6.8",
+      "resolved": "https://registry.npmjs.org/@restart/ui/-/ui-1.6.8.tgz",
+      "integrity": "sha512-6ndCv3oZ7r9vuP1Ok9KH55TM1/UkdBnP/fSraW0DFDMbPMzWKhVKeFAIEUCRCSdzayjZDcFYK6xbMlipN9dmMA==",
+      "dependencies": {
+        "@babel/runtime": "^7.21.0",
+        "@popperjs/core": "^2.11.6",
+        "@react-aria/ssr": "^3.5.0",
+        "@restart/hooks": "^0.4.9",
+        "@types/warning": "^3.0.0",
+        "dequal": "^2.0.3",
+        "dom-helpers": "^5.2.0",
+        "uncontrollable": "^8.0.1",
+        "warning": "^4.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.14.0",
+        "react-dom": ">=16.14.0"
+      }
+    },
+    "node_modules/@restart/ui/node_modules/uncontrollable": {
+      "version": "8.0.4",
+      "resolved": "https://registry.npmjs.org/uncontrollable/-/uncontrollable-8.0.4.tgz",
+      "integrity": "sha512-ulRWYWHvscPFc0QQXvyJjY6LIXU56f0h8pQFvhxiKk5V1fcI8gp9Ht9leVAhrVjzqMw0BgjspBINx9r6oyJUvQ==",
+      "peerDependencies": {
+        "react": ">=16.14.0"
+      }
+    },
     "node_modules/@rollup/plugin-babel": {
       "version": "5.3.1",
       "resolved": "https://registry.npmjs.org/@rollup/plugin-babel/-/plugin-babel-5.3.1.tgz",
@@ -4352,6 +4438,14 @@
         "url": "https://github.com/sponsors/gregberge"
       }
     },
+    "node_modules/@swc/helpers": {
+      "version": "0.5.8",
+      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.8.tgz",
+      "integrity": "sha512-lruDGw3pnfM3wmZHeW7JuhkGQaJjPyiKjxeGhdmfoOT53Ic9qb5JLDNaK2HUdl1zLDeX28H221UvKjfdvSLVMg==",
+      "dependencies": {
+        "tslib": "^2.4.0"
+      }
+    },
     "node_modules/@testing-library/dom": {
       "version": "9.3.4",
       "resolved": "https://registry.npmjs.org/@testing-library/dom/-/dom-9.3.4.tgz",
@@ -5639,6 +5733,14 @@
         "@types/react": "*"
       }
     },
+    "node_modules/@types/react-transition-group": {
+      "version": "4.4.10",
+      "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.10.tgz",
+      "integrity": "sha512-hT/+s0VQs2ojCX823m60m5f0sL5idt9SO6Tj6Dg+rdphGPIeJbJ6CxvBYkgkGKrYeDjvIpKTR38UzmtHJOGW3Q==",
+      "dependencies": {
+        "@types/react": "*"
+      }
+    },
     "node_modules/@types/resolve": {
       "version": "1.17.1",
       "resolved": "https://registry.npmjs.org/@types/resolve/-/resolve-1.17.1.tgz",
@@ -5721,6 +5823,11 @@
       "resolved": "https://registry.npmjs.org/@types/trusted-types/-/trusted-types-2.0.7.tgz",
       "integrity": "sha512-ScaPdn1dQczgbl0QFTeTOmVHFULt394XJgOQNoyVhZ6r2vLnMLJfBPd53SB52T/3G36VI1/g2MZaX0cwDuXsfw=="
     },
+    "node_modules/@types/warning": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/@types/warning/-/warning-3.0.3.tgz",
+      "integrity": "sha512-D1XC7WK8K+zZEveUPY+cf4+kgauk8N4eHr/XIHXGlGYkHLud6hK9lYfZk1ry1TNh798cZUCgb6MqGEG8DkJt6Q=="
+    },
     "node_modules/@types/ws": {
       "version": "8.5.10",
       "resolved": "https://registry.npmjs.org/@types/ws/-/ws-8.5.10.tgz",
@@ -7069,6 +7176,24 @@
       "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",
       "integrity": "sha512-JZOSA7Mo9sNGB8+UjSgzdLtokWAky1zbztM3WRLCbZ70/3cTANmQmOdR7y2g+J0e2WXywy1yS468tY+IruqEww=="
     },
+    "node_modules/bootstrap": {
+      "version": "5.3.3",
+      "resolved": "https://registry.npmjs.org/bootstrap/-/bootstrap-5.3.3.tgz",
+      "integrity": "sha512-8HLCdWgyoMguSO9o+aH+iuZ+aht+mzW0u3HIMzVu7Srrpv7EBBxTnrFlSCskwdY1+EOFQSm7uMJhNQHkdPcmjg==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/twbs"
+        },
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/bootstrap"
+        }
+      ],
+      "peerDependencies": {
+        "@popperjs/core": "^2.11.8"
+      }
+    },
     "node_modules/brace-expansion": {
       "version": "1.1.11",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
@@ -7336,6 +7461,11 @@
       "resolved": "https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.2.3.tgz",
       "integrity": "sha512-0TNiGstbQmCFwt4akjjBg5pLRTSyj/PkWQ1ZoO2zntmg9yLqSRxwEa4iCfQLGjqhiqBfOJa7W/E8wfGrTDmlZQ=="
     },
+    "node_modules/classnames": {
+      "version": "2.5.1",
+      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.5.1.tgz",
+      "integrity": "sha512-saHYOzhIQs6wy2sVxTM6bUDsQO4F50V9RQ22qBpEdCW+I+/Wmke2HOl6lS6dTpdxVhb88/I6+Hs+438c3lfUow=="
+    },
     "node_modules/clean-css": {
       "version": "5.3.3",
       "resolved": "https://registry.npmjs.org/clean-css/-/clean-css-5.3.3.tgz",
@@ -8361,6 +8491,15 @@
         "utila": "~0.4"
       }
     },
+    "node_modules/dom-helpers": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
+      "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
+      "dependencies": {
+        "@babel/runtime": "^7.8.7",
+        "csstype": "^3.0.2"
+      }
+    },
     "node_modules/dom-serializer": {
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-1.4.1.tgz",
@@ -10846,6 +10985,14 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/invariant": {
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
+      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
     "node_modules/ipaddr.js": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-2.1.0.tgz",
@@ -16062,6 +16209,23 @@
         "react-is": "^16.13.1"
       }
     },
+    "node_modules/prop-types-extra": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/prop-types-extra/-/prop-types-extra-1.1.1.tgz",
+      "integrity": "sha512-59+AHNnHYCdiC+vMwY52WmvP5dM3QLeoumYuEyceQDi9aEhtwN9zIQ2ZNo25sMyXnbh32h+P1ezDsUpUH3JAew==",
+      "dependencies": {
+        "react-is": "^16.3.2",
+        "warning": "^4.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=0.14.0"
+      }
+    },
+    "node_modules/prop-types-extra/node_modules/react-is": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
+    },
     "node_modules/prop-types/node_modules/react-is": {
       "version": "16.13.1",
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
@@ -16259,6 +16423,35 @@
       "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz",
       "integrity": "sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg=="
     },
+    "node_modules/react-bootstrap": {
+      "version": "2.10.2",
+      "resolved": "https://registry.npmjs.org/react-bootstrap/-/react-bootstrap-2.10.2.tgz",
+      "integrity": "sha512-UvB7mRqQjivdZNxJNEA2yOQRB7L9N43nBnKc33K47+cH90/ujmnMwatTCwQLu83gLhrzAl8fsa6Lqig/KLghaA==",
+      "dependencies": {
+        "@babel/runtime": "^7.22.5",
+        "@restart/hooks": "^0.4.9",
+        "@restart/ui": "^1.6.8",
+        "@types/react-transition-group": "^4.4.6",
+        "classnames": "^2.3.2",
+        "dom-helpers": "^5.2.1",
+        "invariant": "^2.2.4",
+        "prop-types": "^15.8.1",
+        "prop-types-extra": "^1.1.0",
+        "react-transition-group": "^4.4.5",
+        "uncontrollable": "^7.2.1",
+        "warning": "^4.0.3"
+      },
+      "peerDependencies": {
+        "@types/react": ">=16.14.8",
+        "react": ">=16.14.0",
+        "react-dom": ">=16.14.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/react-dev-utils": {
       "version": "12.0.1",
       "resolved": "https://registry.npmjs.org/react-dev-utils/-/react-dev-utils-12.0.1.tgz",
@@ -16407,6 +16600,11 @@
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
       "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w=="
     },
+    "node_modules/react-lifecycles-compat": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",
+      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA=="
+    },
     "node_modules/react-refresh": {
       "version": "0.11.0",
       "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.11.0.tgz",
@@ -16517,6 +16715,21 @@
         }
       }
     },
+    "node_modules/react-transition-group": {
+      "version": "4.4.5",
+      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
+      "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
+      "dependencies": {
+        "@babel/runtime": "^7.5.5",
+        "dom-helpers": "^5.0.1",
+        "loose-envify": "^1.4.0",
+        "prop-types": "^15.6.2"
+      },
+      "peerDependencies": {
+        "react": ">=16.6.0",
+        "react-dom": ">=16.6.0"
+      }
+    },
     "node_modules/react-tsparticles": {
       "version": "2.12.2",
       "resolved": "https://registry.npmjs.org/react-tsparticles/-/react-tsparticles-2.12.2.tgz",
@@ -18615,6 +18828,20 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/uncontrollable": {
+      "version": "7.2.1",
+      "resolved": "https://registry.npmjs.org/uncontrollable/-/uncontrollable-7.2.1.tgz",
+      "integrity": "sha512-svtcfoTADIB0nT9nltgjujTi7BzVmwjZClOmskKu/E8FW9BXzg9os8OLr4f8Dlnk0rYWJIWr4wv9eKUXiQvQwQ==",
+      "dependencies": {
+        "@babel/runtime": "^7.6.3",
+        "@types/react": ">=16.9.11",
+        "invariant": "^2.2.4",
+        "react-lifecycles-compat": "^3.0.4"
+      },
+      "peerDependencies": {
+        "react": ">=15.0.0"
+      }
+    },
     "node_modules/underscore": {
       "version": "1.12.1",
       "resolved": "https://registry.npmjs.org/underscore/-/underscore-1.12.1.tgz",
@@ -18853,6 +19080,14 @@
         "makeerror": "1.0.12"
       }
     },
+    "node_modules/warning": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
+      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
     "node_modules/watchpack": {
       "version": "2.4.1",
       "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-2.4.1.tgz",
diff --git a/package.json b/package.json
index e6c7d5d..7431f58 100644
--- a/package.json
+++ b/package.json
@@ -4,17 +4,20 @@
   "private": true,
   "dependencies": {
     "@fortawesome/fontawesome-svg-core": "^6.5.1",
+    "@fortawesome/free-brands-svg-icons": "^6.5.2",
     "@fortawesome/free-solid-svg-icons": "^6.5.1",
     "@fortawesome/react-fontawesome": "^0.2.0",
     "@testing-library/jest-dom": "^5.17.0",
     "@testing-library/react": "^13.4.0",
     "@testing-library/user-event": "^13.5.0",
     "@tsparticles/react": "^3.0.0",
+    "bootstrap": "^5.3.3",
     "firebase": "^10.9.0",
     "firebaseui": "^6.1.0",
     "fortawesome": "^0.0.1-security",
     "jquery": "^3.7.1",
     "react": "^18.2.0",
+    "react-bootstrap": "^2.10.2",
     "react-dom": "^18.2.0",
     "react-firebase-hooks": "^5.1.1",
     "react-router-dom": "^6.22.3",
diff --git a/src/App.css b/src/App.css
deleted file mode 100644
index 74b5e05..0000000
--- a/src/App.css
+++ /dev/null
@@ -1,38 +0,0 @@
-.App {
-  text-align: center;
-}
-
-.App-logo {
-  height: 40vmin;
-  pointer-events: none;
-}
-
-@media (prefers-reduced-motion: no-preference) {
-  .App-logo {
-    animation: App-logo-spin infinite 20s linear;
-  }
-}
-
-.App-header {
-  background-color: #282c34;
-  min-height: 100vh;
-  display: flex;
-  flex-direction: column;
-  align-items: center;
-  justify-content: center;
-  font-size: calc(10px + 2vmin);
-  color: white;
-}
-
-.App-link {
-  color: #61dafb;
-}
-
-@keyframes App-logo-spin {
-  from {
-    transform: rotate(0deg);
-  }
-  to {
-    transform: rotate(360deg);
-  }
-}
diff --git a/src/App.js b/src/App.js
index 95411f1..c939914 100644
--- a/src/App.js
+++ b/src/App.js
@@ -1,14 +1,17 @@
-import React from 'react';
-import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'; // Import Navigate
+// src/App.js
+import React, { useState, useEffect } from 'react';
+import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
 import { auth } from './services/firebase';
-import LoginPage from './components/LoginPage';
-import Dashboard from './components/Dashboard';
+import { Container } from 'react-bootstrap';
+import Header from './components/Header';
+import MainPage from './components/MainPage';
 import ProfilePage from './components/ProfilePage';
+import LeaderboardPage from './components/LeaderboardPage';
 
 function App() {
-  const [currentUser, setCurrentUser] = React.useState(auth.currentUser);
+  const [currentUser, setCurrentUser] = useState(null);
 
-  React.useEffect(() => {
+  useEffect(() => {
     const unsubscribe = auth.onAuthStateChanged(user => {
       setCurrentUser(user);
     });
@@ -18,25 +21,18 @@ function App() {
 
   return (
     <Router>
-      <Routes>
-        <Route
-          path="/"
-          element={currentUser ? <Dashboard /> : <Navigate to="/login" />}
-        />
-        <Route
-          path="/dashboard"
-          element={currentUser ? <Dashboard /> : <Navigate to="/login" />}
-        />
-        <Route
-          path="/profile"
-          element={<ProfilePage />}
-        />
-        <Route path="/login" 
-        element={currentUser ? <Navigate to="/dashboard" />: <LoginPage />}
-        />
-      </Routes>
+      <div>
+        <Header user={currentUser} />
+        <Container>
+          <Routes>
+            <Route path="/" element={<MainPage currentUser={currentUser} />} />
+            <Route path="/profile" element={<ProfilePage currentUser={currentUser} />} />
+            <Route path="/leaderboard" element={<LeaderboardPage />} />
+          </Routes>
+        </Container>
+      </div>
     </Router>
   );
 }
 
-export default App;
\ No newline at end of file
+export default App;
diff --git a/src/components/Dashboard.js b/src/components/Dashboard.js
index a4642c9..22d0a6e 100644
--- a/src/components/Dashboard.js
+++ b/src/components/Dashboard.js
@@ -1,3 +1,4 @@
+// src/components/Dashboard.js
 import React, { useState, useEffect } from 'react';
 import { BrowserRouter as Navigate, Link } from 'react-router-dom'; // Import Navigate
 import { auth } from '../services/firebase';
diff --git a/src/components/LoadingScreen.js b/src/components/LoadingScreen.js
index 41f042b..d7479db 100644
--- a/src/components/LoadingScreen.js
+++ b/src/components/LoadingScreen.js
@@ -1,3 +1,4 @@
+// src/components/LoadingScreen.js
 import React from 'react';
 import { Particles } from '@tsparticles/react';
 
diff --git a/src/components/LoginPage.css b/src/components/LoginPage.css
deleted file mode 100644
index 6951ce7..0000000
--- a/src/components/LoginPage.css
+++ /dev/null
@@ -1,33 +0,0 @@
-.login-container {
-    display: flex;
-    position: relative;
-    flex-direction: column;
-    align-items: center;
-    justify-content: center;
-    height: 100vh;
-}
-
-.welcome-message {
-    margin-bottom: 20px;
-    font-size: 24px;
-}
-
-.sign-in-button,
-.sign-out-button {
-    padding: 10px 20px;
-    margin-top: 10px;
-    border: none;
-    border-radius: 5px;
-    cursor: pointer;
-    z-index: 1;
-}
-
-.sign-in-button {
-    background-color: #4285F4;
-    color: white;
-}
-
-.sign-out-button {
-    background-color: #FF0000;
-    color: white;
-}
\ No newline at end of file
diff --git a/src/components/LoginPage.js b/src/components/LoginPage.js
index 77f41aa..8b37c04 100644
--- a/src/components/LoginPage.js
+++ b/src/components/LoginPage.js
@@ -1,95 +1,12 @@
-import React, { useState, useEffect } from 'react';
-import { signInWithPopup, signOut, getAuth } from "firebase/auth";
-import { auth, googleProvider } from '../services/firebase';
-import 'firebaseui/dist/firebaseui.css'; // Import Firebase UI CSS
-import LoadingScreen from './LoadingScreen';
-import { initParticlesEngine } from "@tsparticles/react";
-import { loadSlim } from "@tsparticles/slim";
-import './LoginPage.css'; // Import custom CSS for styling
-
-const delay = 10000; // milliseconds
-
-function LoginPage() {
-  const [isLoading, setIsLoading] = useState(true);
-  const [user, setUser] = useState(null);
-
-  useEffect(() => {
-    const checkLogin = async () => {
-      try {
-        setUser(await getAuth().currentUser);
-      } catch (err) {
-        console.error(err);
-      }
-      setIsLoading(false);
-    }
-    setTimeout(checkLogin, delay);
-
-    initParticlesEngine(async (engine) => {
-      await loadSlim(engine);
-    });
-  }, []);
-
-  const signInWithGoogle = async () => {
-    try {
-      await signInWithPopup(auth, googleProvider);
-    } catch (err) {
-      console.error(err);
-    }
-  };
-
-  const handleSignOut = async () => {
-    try {
-      await signOut(auth);
-    } catch (err) {
-      console.error(err);
-    }
-  };
-
-  const particlesOptions = {
-    // Other options...
-    detectRetina: true,
-    motion: {
-      reduce: {
-        factor: 4,
-        value: true
-      }
-    },
-    particles: {
-      // Other particle options...
-      move: {
-        enable: true,
-        speed: 2,
-        direction: "none",
-        random: true,
-        straight: false,
-        outModes: {
-          default: "out"
-        },
-        attract: {
-          enable: false,
-          rotate: {
-            x: 600,
-            y: 1200
-          }
-        }
-      }
-    }
-  };
+// src/components/LoginPage.js
+import React from 'react';
+import { Button } from 'react-bootstrap';
 
+const LoginPage = ({ onLogin }) => {
   return (
-    <div className="login-container">
-      {isLoading && <LoadingScreen />}
-      <div id="particles-js" className="particles-js">
-        <canvas className="particles-canvas"></canvas>
-      </div>
-      <div id="firebaseui-auth-container"></div>
-      <button onClick={signInWithGoogle} className="sign-in-button">Sign in with Google</button>
-      {!isLoading && user && (
-        <>
-          <p className="welcome-message">Welcome, {user.displayName}!</p>
-          <button onClick={handleSignOut} className="sign-out-button">Sign out</button>
-        </>
-      )}
+    <div className="container">
+      <h2>Login to Coding Leaderboard</h2>
+      <Button onClick={onLogin} variant="primary">Login with Firebase</Button>
     </div>
   );
 }
diff --git a/src/components/ProfilePage.css b/src/components/ProfilePage.css
deleted file mode 100644
index cf2e57d..0000000
--- a/src/components/ProfilePage.css
+++ /dev/null
@@ -1,76 +0,0 @@
-.profile-form-container {
-    max-width: 600px;
-    margin: 0 auto;
-    padding: 20px;
-    border: 1px solid #ccc;
-    border-radius: 5px;
-    background-color: #f9f9f9;
-}
-
-.profile-form-user-info {
-    display: flex;
-    align-items: center;
-    margin-bottom: 20px;
-}
-
-.profile-form-user-avatar {
-    width: 50px;
-    height: 50px;
-    border-radius: 50%;
-    margin-right: 20px;
-}
-
-.profile-form-input-container {
-    display: flex;
-    align-items: center;
-    margin-bottom: 10px;
-}
-
-.profile-form-input {
-    width: calc(100% - 100px);
-    /* Adjust based on button width */
-    padding: 10px;
-    border: 1px solid #ccc;
-    border-radius: 5px;
-    font-size: 16px;
-}
-
-.profile-form-button {
-    width: 90px;
-    /* Adjust button width */
-    margin-left: 10px;
-    /* Adjust spacing between input and button */
-    padding: 10px;
-    border: none;
-    border-radius: 5px;
-    background-color: #007bff;
-    color: #fff;
-    font-size: 16px;
-    cursor: pointer;
-}
-
-.profile-form-button:hover {
-    background-color: #0056b3;
-}
-
-.profile-form-button.verified {
-    background-color: #28a745;
-}
-
-.profile-form-button.verified:hover {
-    background-color: #218838;
-}
-
-.profile-form-button.invalid {
-    background-color: #dc3545; /* Red color */
-}
-
-.profile-form-button.invalid:hover {
-    background-color: #c82333; /* Darker shade of red on hover */
-}
-
-.profile-form-error-message {
-    color: #dc3545;
-    font-size: 14px;
-    margin-top: 10px;
-}
\ No newline at end of file
diff --git a/src/components/ProfilePage.js b/src/components/ProfilePage.js
index 83014ea..afe2738 100644
--- a/src/components/ProfilePage.js
+++ b/src/components/ProfilePage.js
@@ -1,134 +1,60 @@
-import React, { useState, useEffect } from 'react';
-import { auth } from '../services/firebase';
-import $ from 'jquery';
-import './ProfilePage.css';
-
-// Import Font Awesome
-import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
-import { faSpinner } from '@fortawesome/free-solid-svg-icons';
-
-function ProfileForm() {
-  const platforms = [
-    { platform: 'geeksforgeeks', state: useState({ platform: 'geeksforgeeks', username: '', verificationStatus: 'unchecked', loading: false }) },
-    { platform: 'codeforces', state: useState({ platform: 'codeforces', username: '', verificationStatus: 'unchecked', loading: false }) },
-    { platform: 'leetcode', state: useState({ platform: 'leetcode', username: '', verificationStatus: 'unchecked', loading: false }) },
-    { platform: 'codechef', state: useState({ platform: 'codechef', username: '', verificationStatus: 'unchecked', loading: false }) },
-    { platform: 'hackerrank', state: useState({ platform: 'hackerrank', username: '', verificationStatus: 'unchecked', loading: false }) },
-  ];
-
-  const [errorMessage, setErrorMessage] = useState('');
-  const [userInfo, setUserInfo] = useState(null);
-
-  useEffect(() => {
-    const fetchUserInfo = async () => {
-      const currentUser = auth.currentUser;
-      if (currentUser) {
-        setUserInfo({
-          name: currentUser.displayName,
-          email: currentUser.email,
-          photoURL: currentUser.photoURL,
-        });
-      }
-    };
-
-    fetchUserInfo();
-  }, []);
-
-  const handleVerify = async (platform, userData, setData) => {
-    try {
-      console.log(`Verifying ${platform} username...`);
-      let url = '';
-      if (platform === 'leetcode') {
-        url = `https://alfa-leetcode-api.onrender.com/${userData.username}`;
-      } else {
-        url = `https://codeprofilevalidator.onrender.com/check-url-platform/?platform=${platform}&username=${userData.username}`;
-      }
-
-      setData(prevData => ({ ...prevData, loading: true }));
-      setErrorMessage('');
-
-      $.ajax({
-        url: url,
-        dataType: 'json',
-        statusCode: {
-          200: function (d) {
-            if (userData.username === '') {
-              console.log("status code 200 returned");
-              setData({ platform, username: userData.username, verificationStatus: 'verified_false', loading: false });
-              setErrorMessage('Username cannot be empty.');
-              return;
-            }
-            if ('errors' in d) {
-              console.log(d.errors);
-              console.log("status code 200 returned");
-              setData({ platform, username: userData.username, verificationStatus: 'verified_false', loading: false });
-            } else {
-              console.log(d);
-              console.log("status code 200 returned");
-              setData({ platform, username: userData.username, verificationStatus: 'verified_true', loading: false });
-            }
-          },
-          400: function (d) {
-            console.log(d);
-            setData({ platform, username: userData.username, verificationStatus: 'verified_false', loading: false });
-            setErrorMessage(d.responseJSON.error);
-          },
-          404: function (d) {
-            console.log(d);
-            console.log("status code 404 returned");
-            setData({ platform, username: userData.username, verificationStatus: 'verified_false', loading: false });
-          }
-        },
-      })
-    } catch (error) {
-      console.error(error);
-    }
-  };
-
-  const handleSave = async () => {
-    alert('Data saved successfully!');
-  };
-
-  const handleUsernameChange = (e, setUsername) => {
-    const inputUsername = e.target.value;
-    const formattedUsername = inputUsername.replace(/[A-Z]/g, (match) => match.toLowerCase());
-    if (inputUsername === '' || /^[a-z0-9_]{1,20}$/.test(formattedUsername)) {
-      setUsername({ username: formattedUsername, verified: false });
-      setErrorMessage('');
-    } else {
-      setErrorMessage('Username should be 1-20 characters long, lowercase, and may only contain letters, numbers, or underscores.');
-    }
+import React from 'react';
+import { Container, Card, Col, Row } from 'react-bootstrap';
+import ProfileForm from './ProfileForm';
+
+const ProfilePage = ({ currentUser }) => {
+  const profileFormInactiveStyle = {
+    filter: currentUser ? 'none' : 'blur(4px)',
+    pointerEvents: currentUser ? 'auto' : 'none',
   };
 
   return (
-    <div className="profile-form-container">
-      <div className="profile-form-user-info">
-        <img src={userInfo?.photoURL} alt="User" className="profile-form-user-avatar" />
-        <div>
-          <h2>{userInfo?.name}</h2>
-          <p>{userInfo?.email}</p>
-        </div>
-      </div>
-
-      {platforms.map(({ platform, state }) => (
-        <div key={platform} className="profile-form-input-container">
-          <input
-            type="text"
-            value={state[0].username}
-            onChange={(e) => handleUsernameChange(e, state[1])}
-            placeholder={`${platform.charAt(0).toUpperCase() + platform.slice(1)} Username`}
-            className={errorMessage ? 'profile-form-input invalid' : 'profile-form-input'}
-          />
-          <button onClick={() => handleVerify(platform, state[0], state[1])} className={state[0].loading ? 'profile-form-button loading' : state[0].verificationStatus === 'unchecked' ? 'profile-form-button' : state[0].verificationStatus === 'verified_true' ? 'profile-form-button verified' : state[0].verificationStatus === 'verified_false' ? 'profile-form-button invalid' : 'profile-form-button'}>
-            {state[0].loading ? <FontAwesomeIcon icon={faSpinner} spin /> : state[0].verificationStatus === 'verified_true' ? 'Exists' : state[0].verificationStatus === 'verified_false' ? 'Invalid' : 'Verify'}
-          </button>
-        </div>
-      ))}
-
-      {errorMessage && <p className="profile-form-error-message">{errorMessage}</p>}
-      <button onClick={handleSave} className="profile-form-button">Save</button>
-    </div>
+    <Container className="mt-5">
+      <Row className="justify-content-center">
+        <Col md={8}>
+          <div className="text-center mb-4">
+            {currentUser ? (
+              <Card className="rounded shadow">
+                <Card.Body>
+                  <h4>Welcome, {currentUser.displayName}!</h4>
+                  <p>Email: {currentUser.email}</p>
+                  <img src={currentUser.photoURL} alt="User" className="rounded-circle img-fluid" style={{ maxWidth: '150px' }} />
+                </Card.Body>
+              </Card>
+            ) : (
+              <p>We're glad you're here! Unfortunately, you're not signed in at the moment. Sign in or create an account to get started.</p>
+            )}
+          </div>
+        </Col>
+      </Row>
+      <Row className="justify-content-center">
+        <Col md={8}>
+          <Card className="mb-4 rounded shadow" style={profileFormInactiveStyle}>
+            <Card.Body>
+              <h3 className="mb-3 text-center">Verify Your Coding Profiles</h3>
+              <ProfileForm currentUser={currentUser} />
+            </Card.Body>
+          </Card>
+        </Col>
+      </Row>
+      <Row className="justify-content-center">
+        <Col md={8}>
+          <div className="text-center">
+            <h3 className="mb-3">How It Works</h3>
+            <p>
+              Enter your usernames for various coding platforms in the form below to verify your profiles. Once entered, click the "Verify" button next to each platform to check if the username is valid.
+            </p>
+            <p>
+              Upon verification, the button will display "Exists" if the username is valid, and "Invalid" otherwise. You can then click the "Save" button at the bottom of the form to save your information.
+            </p>
+            <p>
+              <strong>Note:</strong> Usernames should be 1-20 characters long, lowercase, and may only contain letters, numbers, or underscores.
+            </p>
+          </div>
+        </Col>
+      </Row>
+    </Container>
   );
 }
 
-export default ProfileForm;
+export default ProfilePage;
diff --git a/src/index.js b/src/index.js
index d563c0f..286e81b 100644
--- a/src/index.js
+++ b/src/index.js
@@ -3,6 +3,7 @@ import ReactDOM from 'react-dom/client';
 import './index.css';
 import App from './App';
 import reportWebVitals from './reportWebVitals';
+import '../node_modules/bootstrap/dist/css/bootstrap.min.css';
 
 const root = ReactDOM.createRoot(document.getElementById('root'));
 root.render(
diff --git a/src/services/firebase.js b/src/services/firebase.js
index 255d101..fe8d9ff 100644
--- a/src/services/firebase.js
+++ b/src/services/firebase.js
@@ -1,4 +1,5 @@
 import { initializeApp } from 'firebase/app';
+import { getFirestore } from 'firebase/firestore';
 import { getAuth, GoogleAuthProvider } from 'firebase/auth';
 
 // load config env vars
@@ -13,5 +14,7 @@ const firebaseConfig = {
 }
 
 const app = initializeApp(firebaseConfig);
-export const auth =  getAuth(app);
-export const googleProvider = new GoogleAuthProvider();
+const auth =  getAuth(app);
+const googleProvider = new GoogleAuthProvider();
+const firestore = getFirestore(app);
+export { auth, googleProvider, firestore };
